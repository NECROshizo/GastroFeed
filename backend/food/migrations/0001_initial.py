# Generated by Django 4.2.1 on 2023-05-31 16:25

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Добавил в избранное',
                'verbose_name_plural': 'Добавили в избранное',
                'ordering': ['user'],
            },
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_comment='Название ингредиента', help_text='Придумайте название ингредиента', max_length=200, verbose_name='Наименование')),
                ('measurement_unit', models.CharField(db_comment='Ед.измерения ингредиента', help_text='Обозначте ед. измерения ингредиента', max_length=20, verbose_name='Ед. измерения')),
            ],
            options={
                'verbose_name': 'Ингредиент',
                'verbose_name_plural': 'Ингредиенты',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='IngredientsRecipes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.PositiveIntegerField(verbose_name='Количество ингредиентов')),
            ],
            options={
                'verbose_name': 'Ингредиент в рецепте',
                'verbose_name_plural': 'Ингредиенты в рецепте',
                'ordering': ['recipe'],
            },
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Название')),
                ('image', models.ImageField(db_comment='Изображение рецепта', help_text='Выберете илюстрацию рецепта', upload_to='food_images/', verbose_name='Готовый результат')),
                ('text', models.TextField(db_comment='Инструкция приготовления', help_text='Опишите приготовление рецепта', verbose_name='Описание рецепта')),
                ('cooking_time', models.PositiveIntegerField(db_comment='Время приготовления', help_text='Обозначьте время приготовления', validators=[django.core.validators.MinValueValidator(limit_value=1, message='Минимальное время приготовления 1 минута')], verbose_name='Время приготовления')),
                ('pub_date', models.DateField(auto_now_add=True, db_comment='Дата добавления рецепта(авто)', verbose_name='Дата создания')),
            ],
            options={
                'verbose_name': 'Рецепт',
                'verbose_name_plural': 'Рецепты',
                'ordering': ['-pub_date'],
            },
        ),
        migrations.CreateModel(
            name='ShoppingCart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Добавил в корзину',
                'verbose_name_plural': 'Добавили в корзину',
                'ordering': ['user'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_comment='Отображаемое название тега', help_text='Придумайте название тега', max_length=200, unique=True, verbose_name='Название')),
                ('color', models.CharField(db_comment='Цвет в HEX-формате', help_text='Используйте цвет в формате HEX', max_length=7, unique=True, validators=[django.core.validators.RegexValidator(message='Ведите цвет в HEX формате #FF1166', regex='#[A-F0-9]{6}$')], verbose_name='Цвет')),
                ('slug', models.SlugField(db_comment='Slug для цвета', help_text='Используйте slug состаящий из латинских букв, цифр и символа _', max_length=200, unique=True, validators=[django.core.validators.RegexValidator(message='Используйте slug состоящий излатинских букв, цифр и символа _', regex='^[-a-zA-Z0-9_]+$')], verbose_name='Слаг')),
            ],
            options={
                'verbose_name': 'Тег',
                'verbose_name_plural': 'Теги',
                'ordering': ('name',),
            },
        ),
        migrations.AddConstraint(
            model_name='tag',
            constraint=models.UniqueConstraint(fields=('name',), name='unique_tag'),
        ),
        migrations.AddField(
            model_name='shoppingcart',
            name='recipe',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shoping_card_recipe', to='food.recipe', verbose_name='Рецепт'),
        ),
    ]
